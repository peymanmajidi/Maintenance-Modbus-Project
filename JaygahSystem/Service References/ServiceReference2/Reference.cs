//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SSFGlasses.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.ISendService")]
    public interface ISendService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/SendSMS", ReplyAction="http://tempuri.org/ISendService/SendSMSResponse")]
        int SendSMS(string userName, string password, string fromNumber, string[] toNumbers, string messageContent, bool isFlash, ref long[] recId, ref byte[] status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetCredit", ReplyAction="http://tempuri.org/ISendService/GetCreditResponse")]
        decimal GetCredit(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetDeilvery", ReplyAction="http://tempuri.org/ISendService/GetDeilveryResponse")]
        int GetDeilvery(string userName, string password, long recId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetMessages", ReplyAction="http://tempuri.org/ISendService/GetMessagesResponse")]
        JaygahSystem.ServiceReference2.MessageInfo[] GetMessages(string userName, string password, int messageType, string[] fromNumbers, int index, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetInboxCount", ReplyAction="http://tempuri.org/ISendService/GetInboxCountResponse")]
        int GetInboxCount(string userName, string password, bool isRead);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/SendBatchSms", ReplyAction="http://tempuri.org/ISendService/SendBatchSmsResponse")]
        int SendBatchSms(out int batchSmsId, string userName, string password, string fromNumber, string[] toNumbers, string messageContent, bool isFlash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetBatchDelivery", ReplyAction="http://tempuri.org/ISendService/GetBatchDeliveryResponse")]
        int GetBatchDelivery(out string[] numbers, out int[] deliveryStatus, string userName, string password, int batchSmsId, int index, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetSenderNumbers", ReplyAction="http://tempuri.org/ISendService/GetSenderNumbersResponse")]
        string GetSenderNumbers(string userName, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISendServiceChannel : SSFGlasses.ServiceReference2.ISendService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendServiceClient : System.ServiceModel.ClientBase<SSFGlasses.ServiceReference2.ISendService>, SSFGlasses.ServiceReference2.ISendService {
        
        public SendServiceClient() {
        }
        
        public SendServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SendServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SendServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SendServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int SendSMS(string userName, string password, string fromNumber, string[] toNumbers, string messageContent, bool isFlash, ref long[] recId, ref byte[] status) {
            return base.Channel.SendSMS(userName, password, fromNumber, toNumbers, messageContent, isFlash, ref recId, ref status);
        }
        
        public decimal GetCredit(string userName, string password) {
            return base.Channel.GetCredit(userName, password);
        }
        
        public int GetDeilvery(string userName, string password, long recId) {
            return base.Channel.GetDeilvery(userName, password, recId);
        }
        
        public JaygahSystem.ServiceReference2.MessageInfo[] GetMessages(string userName, string password, int messageType, string[] fromNumbers, int index, int count) {
            return base.Channel.GetMessages(userName, password, messageType, fromNumbers, index, count);
        }
        
        public int GetInboxCount(string userName, string password, bool isRead) {
            return base.Channel.GetInboxCount(userName, password, isRead);
        }
        
        public int SendBatchSms(out int batchSmsId, string userName, string password, string fromNumber, string[] toNumbers, string messageContent, bool isFlash) {
            return base.Channel.SendBatchSms(out batchSmsId, userName, password, fromNumber, toNumbers, messageContent, isFlash);
        }
        
        public int GetBatchDelivery(out string[] numbers, out int[] deliveryStatus, string userName, string password, int batchSmsId, int index, int count) {
            return base.Channel.GetBatchDelivery(out numbers, out deliveryStatus, userName, password, batchSmsId, index, count);
        }
        
        public string GetSenderNumbers(string userName, string password) {
            return base.Channel.GetSenderNumbers(userName, password);
        }
    }
}
